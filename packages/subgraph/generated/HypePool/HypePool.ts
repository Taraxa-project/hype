// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from '@graphprotocol/graph-ts';

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolActivated extends ethereum.Event {
  get params(): PoolActivated__Params {
    return new PoolActivated__Params(this);
  }
}

export class PoolActivated__Params {
  _event: PoolActivated;

  constructor(event: PoolActivated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get activator(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uri(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class PoolDetailsCreated extends ethereum.Event {
  get params(): PoolDetailsCreated__Params {
    return new PoolDetailsCreated__Params(this);
  }
}

export class PoolDetailsCreated__Params {
  _event: PoolDetailsCreated;

  constructor(event: PoolDetailsCreated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get title(): string {
    return this._event.parameters[1].value.toString();
  }

  get projectName(): string {
    return this._event.parameters[2].value.toString();
  }

  get tokenName(): string {
    return this._event.parameters[3].value.toString();
  }

  get word(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class PoolRewardsCreated extends ethereum.Event {
  get params(): PoolRewardsCreated__Params {
    return new PoolRewardsCreated__Params(this);
  }
}

export class PoolRewardsCreated__Params {
  _event: PoolRewardsCreated;

  constructor(event: PoolRewardsCreated) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get network(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get tokenAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get minReward(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get impressionReward(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get cap(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class PoolUriSet extends ethereum.Event {
  get params(): PoolUriSet__Params {
    return new PoolUriSet__Params(this);
  }
}

export class PoolUriSet__Params {
  _event: PoolUriSet;

  constructor(event: PoolUriSet) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get uri(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class HypePool__createPoolResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get active(): boolean {
    return this[2].toBoolean();
  }

  get details(): HypePool__createPoolResultValue0DetailsStruct {
    return changetype<HypePool__createPoolResultValue0DetailsStruct>(this[3].toTuple());
  }

  get rewards(): HypePool__createPoolResultValue0RewardsStruct {
    return changetype<HypePool__createPoolResultValue0RewardsStruct>(this[4].toTuple());
  }
}

export class HypePool__createPoolResultValue0DetailsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get projectName(): string {
    return this[1].toString();
  }

  get tokenName(): string {
    return this[2].toString();
  }

  get word(): string {
    return this[3].toString();
  }
}

export class HypePool__createPoolResultValue0RewardsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get tokenAddress(): Address {
    return this[1].toAddress();
  }

  get minReward(): BigInt {
    return this[2].toBigInt();
  }

  get impressionReward(): BigInt {
    return this[3].toBigInt();
  }

  get cap(): BigInt {
    return this[4].toBigInt();
  }

  get endDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class HypePool__createPoolInputDetailsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get projectName(): string {
    return this[1].toString();
  }

  get tokenName(): string {
    return this[2].toString();
  }

  get word(): string {
    return this[3].toString();
  }
}

export class HypePool__createPoolInputRewardsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get tokenAddress(): Address {
    return this[1].toAddress();
  }

  get minReward(): BigInt {
    return this[2].toBigInt();
  }

  get impressionReward(): BigInt {
    return this[3].toBigInt();
  }

  get cap(): BigInt {
    return this[4].toBigInt();
  }

  get endDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class HypePool__getPoolResultValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get active(): boolean {
    return this[2].toBoolean();
  }

  get details(): HypePool__getPoolResultValue0DetailsStruct {
    return changetype<HypePool__getPoolResultValue0DetailsStruct>(this[3].toTuple());
  }

  get rewards(): HypePool__getPoolResultValue0RewardsStruct {
    return changetype<HypePool__getPoolResultValue0RewardsStruct>(this[4].toTuple());
  }
}

export class HypePool__getPoolResultValue0DetailsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get projectName(): string {
    return this[1].toString();
  }

  get tokenName(): string {
    return this[2].toString();
  }

  get word(): string {
    return this[3].toString();
  }
}

export class HypePool__getPoolResultValue0RewardsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get tokenAddress(): Address {
    return this[1].toAddress();
  }

  get minReward(): BigInt {
    return this[2].toBigInt();
  }

  get impressionReward(): BigInt {
    return this[3].toBigInt();
  }

  get cap(): BigInt {
    return this[4].toBigInt();
  }

  get endDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class HypePool extends ethereum.SmartContract {
  static bind(address: Address): HypePool {
    return new HypePool('HypePool', address);
  }

  createPool(
    uri: string,
    details: HypePool__createPoolInputDetailsStruct,
    rewards: HypePool__createPoolInputRewardsStruct,
  ): HypePool__createPoolResultValue0Struct {
    let result = super.call(
      'createPool',
      'createPool(string,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)):((uint256,address,bool,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)))',
      [
        ethereum.Value.fromString(uri),
        ethereum.Value.fromTuple(details),
        ethereum.Value.fromTuple(rewards),
      ],
    );

    return changetype<HypePool__createPoolResultValue0Struct>(result[0].toTuple());
  }

  try_createPool(
    uri: string,
    details: HypePool__createPoolInputDetailsStruct,
    rewards: HypePool__createPoolInputRewardsStruct,
  ): ethereum.CallResult<HypePool__createPoolResultValue0Struct> {
    let result = super.tryCall(
      'createPool',
      'createPool(string,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)):((uint256,address,bool,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)))',
      [
        ethereum.Value.fromString(uri),
        ethereum.Value.fromTuple(details),
        ethereum.Value.fromTuple(rewards),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<HypePool__createPoolResultValue0Struct>(value[0].toTuple()),
    );
  }

  getCurrentIndex(): BigInt {
    let result = super.call('getCurrentIndex', 'getCurrentIndex():(uint256)', []);

    return result[0].toBigInt();
  }

  try_getCurrentIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall('getCurrentIndex', 'getCurrentIndex():(uint256)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPool(tokenId: BigInt): HypePool__getPoolResultValue0Struct {
    let result = super.call(
      'getPool',
      'getPool(uint256):((uint256,address,bool,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)))',
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );

    return changetype<HypePool__getPoolResultValue0Struct>(result[0].toTuple());
  }

  try_getPool(tokenId: BigInt): ethereum.CallResult<HypePool__getPoolResultValue0Struct> {
    let result = super.tryCall(
      'getPool',
      'getPool(uint256):((uint256,address,bool,(string,string,string,string),(uint256,address,uint256,uint256,uint256,uint256)))',
      [ethereum.Value.fromUnsignedBigInt(tokenId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<HypePool__getPoolResultValue0Struct>(value[0].toTuple()),
    );
  }

  owner(): Address {
    let result = super.call('owner', 'owner():(address)', []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall('owner', 'owner():(address)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call('paused', 'paused():(bool)', []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall('paused', 'paused():(bool)', []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  poolURI(tokenId: BigInt): string {
    let result = super.call('poolURI', 'poolURI(uint256):(string)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);

    return result[0].toString();
  }

  try_poolURI(tokenId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall('poolURI', 'poolURI(uint256):(string)', [
      ethereum.Value.fromUnsignedBigInt(tokenId),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get escrowContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ActivatePoolCall extends ethereum.Call {
  get inputs(): ActivatePoolCall__Inputs {
    return new ActivatePoolCall__Inputs(this);
  }

  get outputs(): ActivatePoolCall__Outputs {
    return new ActivatePoolCall__Outputs(this);
  }
}

export class ActivatePoolCall__Inputs {
  _call: ActivatePoolCall;

  constructor(call: ActivatePoolCall) {
    this._call = call;
  }

  get id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ActivatePoolCall__Outputs {
  _call: ActivatePoolCall;

  constructor(call: ActivatePoolCall) {
    this._call = call;
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get uri(): string {
    return this._call.inputValues[0].value.toString();
  }

  get details(): CreatePoolCallDetailsStruct {
    return changetype<CreatePoolCallDetailsStruct>(this._call.inputValues[1].value.toTuple());
  }

  get rewards(): CreatePoolCallRewardsStruct {
    return changetype<CreatePoolCallRewardsStruct>(this._call.inputValues[2].value.toTuple());
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get value0(): CreatePoolCallValue0Struct {
    return changetype<CreatePoolCallValue0Struct>(this._call.outputValues[0].value.toTuple());
  }
}

export class CreatePoolCallDetailsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get projectName(): string {
    return this[1].toString();
  }

  get tokenName(): string {
    return this[2].toString();
  }

  get word(): string {
    return this[3].toString();
  }
}

export class CreatePoolCallRewardsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get tokenAddress(): Address {
    return this[1].toAddress();
  }

  get minReward(): BigInt {
    return this[2].toBigInt();
  }

  get impressionReward(): BigInt {
    return this[3].toBigInt();
  }

  get cap(): BigInt {
    return this[4].toBigInt();
  }

  get endDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class CreatePoolCallValue0Struct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get active(): boolean {
    return this[2].toBoolean();
  }

  get details(): CreatePoolCallValue0DetailsStruct {
    return changetype<CreatePoolCallValue0DetailsStruct>(this[3].toTuple());
  }

  get rewards(): CreatePoolCallValue0RewardsStruct {
    return changetype<CreatePoolCallValue0RewardsStruct>(this[4].toTuple());
  }
}

export class CreatePoolCallValue0DetailsStruct extends ethereum.Tuple {
  get title(): string {
    return this[0].toString();
  }

  get projectName(): string {
    return this[1].toString();
  }

  get tokenName(): string {
    return this[2].toString();
  }

  get word(): string {
    return this[3].toString();
  }
}

export class CreatePoolCallValue0RewardsStruct extends ethereum.Tuple {
  get network(): BigInt {
    return this[0].toBigInt();
  }

  get tokenAddress(): Address {
    return this[1].toAddress();
  }

  get minReward(): BigInt {
    return this[2].toBigInt();
  }

  get impressionReward(): BigInt {
    return this[3].toBigInt();
  }

  get cap(): BigInt {
    return this[4].toBigInt();
  }

  get endDate(): BigInt {
    return this[5].toBigInt();
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

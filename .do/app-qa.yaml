name: qa-hype
region: sfo
domains:
  - domain: qa.hype.taraxa.io
    type: PRIMARY
    zone: qa.hype.taraxa.io
databases:
  - name: db-api
    engine: PG
    num_nodes: 1
    size: basic-xxs
    version: "12"
  - name: db-wallet
    engine: PG
    num_nodes: 1
    size: basic-xxs
    version: "12"
  - name: db-indexer
    engine: PG
    production: true
    cluster_name: qa-indexer
static_sites:
  - name: frontend
    github:
      repo: Taraxa-project/hype
      branch: develop
      deploy_on_push: true
    source_dir: /
    environment_slug: node-js
    envs:
      - key: REACT_APP_API_HOST
        scope: BUILD_TIME
        value: ${api.PUBLIC_URL}
      - key: REACT_APP_WALLET_HOST
        scope: BUILD_TIME
        value: ${wallet.PUBLIC_URL}
    build_command: yarn workspace hype-client run build
    output_dir: services/client/build
    catchall_document: index.html
    routes:
      - path: /
services:
  - name: api
    github:
      branch: develop
      deploy_on_push: true
      repo: Taraxa-project/hype
    source_dir: /
    dockerfile_path: services/hype-backend/Dockerfile
    envs:
      - key: SERVER_PORT
        scope: RUN_TIME
        value: "3000"
      - key: WALLET_HOST
        scope: RUN_TIME
        value: ${wallet.PUBLIC_URL}
      - key: AUTH_SECRET
        scope: RUN_TIME
        type: SECRET
        value: thisisnotasecret
      - key: DB_HOST
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.HOSTNAME}
      - key: DB_PORT
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.PORT}
      - key: DB_USERNAME
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.USERNAME}
      - key: DB_PASSWORD
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.PASSWORD}
      - key: DB_DATABASE
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.DATABASE}
      - key: DATABASE_CERT
        scope: RUN_TIME
        type: SECRET
        value: ${db-api.CA_CERT}
    instance_count: 1
    instance_size_slug: basic-xxs
    http_port: 3000
    routes:
      - path: /backend-api
  - name: wallet
    github:
      branch: develop
      deploy_on_push: true
      repo: Taraxa-project/wallet-auth
    source_dir: /
    dockerfile_path: Dockerfile
    envs:
      - key: SERVER_PORT
        scope: RUN_TIME
        value: "3000"
      - key: AUTH_SECRET
        scope: RUN_TIME
        type: SECRET
        value: thisisnotasecret
      - key: DB_HOST
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.HOSTNAME}
      - key: DB_PORT
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.PORT}
      - key: DB_USERNAME
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.USERNAME}
      - key: DB_PASSWORD
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.PASSWORD}
      - key: DB_DATABASE
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.DATABASE}
      - key: DATABASE_CERT
        scope: RUN_TIME
        type: SECRET
        value: ${db-wallet.CA_CERT}
    instance_count: 1
    instance_size_slug: basic-xxs
    http_port: 3000
    routes:
      - path: /wallet-api
  - name: indexer
    image:
      registry_type: DOCKER_HUB
      registry: graphprotocol
      repository: graph-node
      tag: latest
    envs:
      - key: GRAPH_LOG
        scope: RUN_TIME
        value: "info"
      - key: GRAPH_ALLOW_NON_DETERMINISTIC_IPFS
        scope: RUN_TIME
        value: "1"
      - key: GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH
        scope: RUN_TIME
        value: "1"
      - key: ethereum
        scope: RUN_TIME
        value: "taraxa:https://rpc.devnet.taraxa.io"
      - key: postgres_host
        scope: RUN_TIME
        type: SECRET
        value: ${db-indexer.HOSTNAME}
      - key: postgres_port
        scope: RUN_TIME
        type: SECRET
        value: ${db-indexer.PORT}
      - key: postgres_user
        scope: RUN_TIME
        type: SECRET
        value: ${db-indexer.USERNAME}
      - key: postgres_pass
        scope: RUN_TIME
        type: SECRET
        value: ${db-indexer.PASSWORD}
      - key: postgres_db
        scope: RUN_TIME
        type: SECRET
        value: ${db-indexer.DATABASE}
      - key: ipfs
        scope: RUN_TIME
        type: SECRET
        value: https://ipfs.infura.io:5001
    instance_count: 1
    instance_size_slug: basic-xxs
    http_port: 8000
    health_check:
      initial_delay_seconds: 900

    routes:
      - path: /indexer
